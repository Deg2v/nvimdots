{
	"plot2": {
		"prefix": "plott2",
		"body": [
			"import numpy as np",
			"import matplotlib.pyplot as plt"
		],
		"description": "numpy matplotlib"
	},
	"logging": {
		"prefix": "sn_logg",
		"body": [
            "import logging",
            "from typing import Union",
            "",
            "",
            "def setlogging(logname: str, silent: bool = False, filename: Union[str, None] = None):",
            "    formatter = logging.Formatter('%(asctime)s [%(name)s] %(levelname)s: %(message)s')",
            "    logger = logging.getLogger(logname)",
            "    logger.setLevel(logging.DEBUG)",
            "    if not silent:",
            "        ch = logging.StreamHandler()",
            "        ch.setFormatter(formatter)",
            "        ch.setLevel(logging.INFO)",
            "        logger.addHandler(ch)",
            "    if filename:",
            "        file_handler = logging.FileHandler(filename=f'{filename}.log')",
            "        file_handler.setFormatter(formatter)",
            "        file_handler.setLevel(logging.DEBUG)  # FIXME: not work???",
            "        logger.addHandler(file_handler)",
            "    return logger\n",
            ""
		],
		"description": "logger"
	},
    "argparsee":{
        "prefix": "sn_arg",
        "body":[
            "import argparse",
            "",
            "",
            "def get_arg():",
            "    parser = argparse.ArgumentParser(description='help', allow_abbrev=True)",
            "    parser.add_argument('-z', action='store_true', default=False, help='zoom ')",
            "    parser.add_argument(",
            "        '-f',",
            "        nargs='*',",
            "        type=int,",
            "        default=[0.02, 5],",
            "        help='default ',",
            "    )",
            "    parser.add_argument('-c', type=str, default='BHZ', dest='channel', help=' ')",
            "    parser.add_argument(",
            "        '-o',",
            "        '--orientation',",
            "        type=str,",
            "        default='horizontal',",
            "        dest='ori',",
            "        choices=['horizontal', 'vertical'],",
            "        help='the orientation of waveform, default horizontal',",
            "    )",
            "",
            "    args = parser.parse_args()",
            "    return args\n",
            ""
        ],
        "description": "Parse command line parameters"
    }
}
